#!/bin/bash
#PBS -l walltime=1:00:00
#PBS -l mem=5GB
#PBS -l ncpus=4
#PBS -j oe
#PBS -q express
#PBS -l wd
#PBS -l software=intel-compiler

# You need to specify WRF configuration options for running configure. 
# Search for the line:
# !!!! CONFIGURE OPTIONS HERE !!!!
# to know where to input the options. You simply need to check the numbers
# written after the configure line and make any change you'd like.
#
# Default is 7: optimised for Sandy Bridge (normal/express queues), distributed memory only.
#
# Here are the choices:
#
#Architecture options.
#--------------------- 
#There are 4 architectures possible. On each architecture, you can compile the code in 
# 4 different ways (in that order):
# - a. serial
# - b. smpar (shared memory parallelisation)
# - c. dmpar (distributed memory parallelisation)
# - d. sm+dm (shared + distributed memory parallelisation)
#
# The architectures are:
# - 1. best precision (options 1-4)
# - 2. optimisation for Sandy Bridge processors (express/normal queues) (options 5-8)
# - 3. optimisation for Broadwell processors (expressbw/normalbw queues) (options 9-12)
# - 4. optimisation for Knights Landing processors (knl queue) (options 13-16)
#
#
# E.g: To compile an optimised code for Broadwell processors, compiled with OpenMPI and OpenMP, 
# you need to choose the option 12.
#
#Nest options:
#-------------
#1. basic
#2. preset moves
#3. vortex following
#
# 
# You also need to check which case you want. By default,
# this script will compile the real case. If you need to compile for
# an idealised case, please change the value of the compile_case variable 
#***********************************************************************

compile_case=em_real

source ../build.env

# WRF now supports large files per default. Option to turn off the support.
#export WRFIO_NCD__NO_LARGE_FILE_SUPPORT=1

# Un-comment to compile with chemistry
#export WRF_CHEM=1

# !!!! CONFIGURE OPTIONS HERE !!!!
./configure << EOF_configure
7
1
EOF_configure

# For multi-processors compilation
export J="-j $PBS_NCPUS"

echo #********************************************
echo Start compilation of ${compile_case} for WRF.
./compile ${compile_case}

